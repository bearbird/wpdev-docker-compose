# To start with an existing database, place the SQL dump file in ./testdb and add this bind mount to mysql:
#    - ./testdb:/docker-entrypoint-initdb.d
#

version: "3.8"

services:
  wpdb:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: "1"
    volumes:
      - db:/var/lib/mysql

  wordpress:
    image: wordpress:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      WORDPRESS_DB_HOST: wpdb
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
      WORDPRESS_DEBUG: 1
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_DEBUG_LOG', true );
        define( 'SCRIPT_DEBUG', true);
        define( 'QM_ENABLE_CAPS_PANEL', true );
        define('WP_HOME','http://${DOMAIN}');
        define('WP_SITEURL','http://${DOMAIN}');
    volumes:
      - wpdata:/var/www/html
      - ${WPCONTENT_LOCAL}/plugins/debug-bar:/var/www/html/wp-content/debug-bar
      - ${WPCONTENT_LOCAL}/plugins/query-monitor:/var/www/html/wp-content/query-monitor
      - ${WPCONTENT_LOCAL}:/var/www/html/wp-content

  wpcli:
    depends_on:
      - wordpress
      - wpdb
    image: wordpress:cli
    command: >
      /bin/sh -c '
      sleep 15;
      wp core install --url="http://${DOMAIN}"  --title="${DOMAIN}" --admin_user="admin" --admin_password="password" --admin_email="nik@ordinaryartistservices.com";
      wp install plugin query-monitor;
      wp install plugin debug-bar;
      '
    volumes:
      - wpdata:/var/www/html
      - db:/var/lib/mysql
      - ./:/var/www/html/wp-content

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8081:80
    environment:
      PMA_HOST: wpdb
      PMA_PORT: 3306
      PMA_ARBITRARY: 1

volumes:
  wpdata:
  db:
